
workflows:
  test-+-ios/android-debug-build:
    name: Test + iOS/android debug build
    max_build_duration: 60
    environment:
      flutter: 2.6.0-11.0.pre
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - pull_request
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      tag_patterns:
        - pattern: '*'
          include: true
      cancel_previous_builds: true
    scripts:
      - |
        # set up debug keystore
        rm -f ~/.android/debug.keystore
        keytool -genkeypair \
          -alias androiddebugkey \
          -keypass android \
          -keystore ~/.android/debug.keystore \
          -storepass android \
          -dname 'CN=Android Debug,O=Android,C=US' \
          -keyalg 'RSA' \
          -keysize 2048 \
          -validity 10000
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - flutter analyze lib packages
      - flutter test
      - flutter test packages
      - flutter build appbundle --debug
      - find . -name "Podfile" -execdir pod install \;
      - flutter build ios --debug --no-codesign
    artifacts:
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      slack:
        channel: '#ci'
        notify_on_build_start: false
  test:
    name: Test
    max_build_duration: 20
    environment:
      flutter: 2.6.0-11.0.pre
      xcode: latest
      cocoapods: default
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      tag_patterns:
        - pattern: '*'
          include: true
      cancel_previous_builds: true
    scripts:
      - name: Flutter pub get
        script: |
          CWD=`pwd`
          PACKAGES_RELATIVE_PATH="packages"
          PACKAGES_DIR="$CWD/$PACKAGES_RELATIVE_PATH"
          flutter pub get
          for d in $(ls $PACKAGES_DIR); do
              PACKAGE_DIR="$PACKAGES_DIR/$d"
              echo "Entering $PACKAGES_RELATIVE_PATH/$d"
              cd $PACKAGE_DIR && flutter pub get
          done
      - name: Static analysis - lib
        script: |
          flutter analyze --fatal-warnings
      - name: Dart Code Metrics - lib
        script: |
          flutter pub global activate dart_code_metrics
          mkdir -p metrics-results
          flutter pub global run dart_code_metrics:metrics analyze lib --reporter=json > metrics-results/dart_code_metrics.json      
        test_report: metrics-results/dart_code_metrics.json
      - name: Dart Code Metrics - packages/rijks_api
        script: |
          cd packages/rijks_api
          flutter pub global activate dart_code_metrics
          mkdir -p metrics-results
          flutter pub global run dart_code_metrics:metrics analyze lib --reporter=json > metrics-results/dart_code_metrics.json      
        test_report: packages/rijks_api/metrics-results/dart_code_metrics.json
      - name: Dart Code Metrics - packages/test_app_blocs
        script: |
          cd packages/test_app_blocs
          flutter pub global activate dart_code_metrics
          mkdir -p metrics-results
          flutter pub global run dart_code_metrics:metrics analyze lib --reporter=json > metrics-results/dart_code_metrics.json      
        test_report: packages/test_app_blocs/metrics-results/dart_code_metrics.json
      - name: Dart Code Metrics - packages/test_app_domain
        script: |
          cd packages/test_app_domain
          flutter pub global activate dart_code_metrics
          mkdir -p metrics-results
          flutter pub global run dart_code_metrics:metrics analyze lib --reporter=json > metrics-results/dart_code_metrics.json      
        test_report: packages/test_app_domain/metrics-results/dart_code_metrics.json
      - name: Dart Code Metrics - packages/test_app_shared
        script: |
          cd packages/test_app_shared
          flutter pub global activate dart_code_metrics
          mkdir -p metrics-results
          flutter pub global run dart_code_metrics:metrics analyze lib --reporter=json > metrics-results/dart_code_metrics.json      
        test_report: packages/test_app_shared/metrics-results/dart_code_metrics.json
      - name: Dart Code Metrics - packages/test_app_ui_kit
        script: |
          cd packages/test_app_ui_kit
          flutter pub global activate dart_code_metrics
          mkdir -p metrics-results
          flutter pub global run dart_code_metrics:metrics analyze lib --reporter=json > metrics-results/dart_code_metrics.json      
        test_report: packages/test_app_ui_kit/metrics-results/dart_code_metrics.json
      - name: Unit tests - lib
        script: |
          mkdir -p test-results
          flutter test --machine > test-results/flutter.json      
        test_report: test-results/flutter.json
      - name: Unit tests - packages/rijks_api
        script: |
          cd packages/rijks_api
          mkdir -p test-results
          flutter test --machine > test-results/flutter.json      
        test_report: packages/rijks_api/test-results/flutter.json
      - name: Unit tests - packages/test_app_blocs
        script: |
          cd packages/test_app_blocs
          mkdir -p test-results
          flutter test --machine > test-results/flutter.json      
        test_report: packages/test_app_blocs/test-results/flutter.json
      - name: Unit tests - packages/test_app_domain
        script: |
          cd packages/test_app_domain
          mkdir -p test-results
          flutter test --machine > test-results/flutter.json      
        test_report: packages/test_app_domain/test-results/flutter.json
      - name: Unit tests - packages/test_app_shared
        script: |
          cd packages/test_app_shared
          mkdir -p test-results
          flutter test --machine > test-results/flutter.json      
        test_report: packages/test_app_shared/test-results/flutter.json
      - name: Unit tests - packages/test_app_ui_kit
        script: |
          cd packages/test_app_ui_kit
          mkdir -p test-results
          flutter test --machine > test-results/flutter.json      
        test_report: packages/test_app_ui_kit/test-results/flutter.json
      - name: Coverage
        script: |
          flutter test --coverage
    artifacts:
      - flutter_drive.log
      - lcov.info
    publishing:
      slack:
        channel: '#ci'
        notify_on_build_start: false
